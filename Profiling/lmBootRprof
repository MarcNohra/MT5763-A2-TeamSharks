sample.interval=20000
".deparseOpts" "deparse" "paste" "FUN" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" "lmBoot" 
"makepredictcall.default" "makepredictcall" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" "lmBoot" 
"model.matrix.default" "model.matrix" "lm" "lmBoot" 
"match.fun" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" "lmBoot" 
"paste" "FUN" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" "lmBoot" 
"paste" "FUN" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" "lmBoot" 
"model.matrix.default" "model.matrix" "lm" "lmBoot" 
"coef.default" "coef" "matrix" "rbind" "lmBoot" 
"[[.data.frame" "[[" "[.data.frame" "[" "lmBoot" 
"[.data.frame" "[" "lmBoot" 
"structure" "lm.fit" "lm" "lmBoot" 
"[.data.frame" "[" "lapply" ".getXlevels" "lm" "lmBoot" 
"paste" "FUN" "vapply" ".getXlevels" "lm" "lmBoot" 
"structure" "lm.fit" "lm" "lmBoot" 
"$" "coef.default" "coef" "matrix" "rbind" "lmBoot" 
"lm" "lmBoot" 
"lm" "lmBoot" 
"oldClass" "terms.formula" "terms" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" "lmBoot" 
"as.list.default" "as.list" "vapply" "model.matrix.default" "model.matrix" "lm" "lmBoot" 
".deparseOpts" "deparse" "paste" "FUN" "vapply" "model.matrix.default" "model.matrix" "lm" "lmBoot" 
"match.call" "lm" "lmBoot" 
".deparseOpts" "deparse" "paste" "FUN" "vapply" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" "lmBoot" 
"$<-" "lm" "lmBoot" 
"vapply" ".getXlevels" "lm" "lmBoot" 
"get0" "getExportedValue" "::" "eval" "eval" "lm" "lmBoot" 
"pmatch" ".deparseOpts" "deparse" "paste" "FUN" "vapply" ".getXlevels" "lm" "lmBoot" 
"pmatch" ".deparseOpts" "deparse" "paste" "FUN" "vapply" ".getXlevels" "lm" "lmBoot" 
"pmatch" ".deparseOpts" "deparse" "paste" "FUN" "vapply" ".getXlevels" "lm" "lmBoot" 
"pmatch" ".deparseOpts" "deparse" "paste" "FUN" "vapply" ".getXlevels" "lm" "lmBoot" 
"model.matrix" "lm" "lmBoot" 
"deparse" "paste" "FUN" "vapply" "model.matrix.default" "model.matrix" "lm" "lmBoot" 
"$<-" "lm" "lmBoot" 
".deparseOpts" "deparse" "paste" "FUN" "vapply" "model.matrix.default" "model.matrix" "lm" "lmBoot" 
".External" "terms.formula" "terms" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" "lmBoot" 
"dim.data.frame" "dim" "dim" "nrow" "sample.int" "sample" "[.data.frame" "[" "lmBoot" 
"base::try" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
