sample.interval=20000
"cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "lmBootParallel" 
"socketConnection" "newPSOCKnode" "makePSOCKcluster" "makeCluster" "lmBootParallel" 
"unserialize" "recvData.SOCKnode" "recvData" "FUN" "lapply" "staticClusterApply" "clusterApply" "do.call" "parLapply" "lmBootParallel" 
"unserialize" "recvData.SOCKnode" "recvData" "FUN" "lapply" "staticClusterApply" "clusterApply" "do.call" "parLapply" "lmBootParallel" 
"unserialize" "recvData.SOCKnode" "recvData" "FUN" "lapply" "staticClusterApply" "clusterApply" "do.call" "parLapply" "lmBootParallel" 
"vapply" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"vapply" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"FUN" "lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"FUN" "lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"FUN" "lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"lapply" "unlist" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"lapply" "unlist" "unique" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"do.call" "unname" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
"as.factor" "split.default" "split" "unname" "lapply" "unlist" "unique" "quickdf" "list_to_dataframe" "plyr::ldply" "lmBootParallel" 
".Call" "stream_delim_" "stream_delim" "write_delim" "write_csv" "lmBootParallel" 
".Call" "stream_delim_" "stream_delim" "write_delim" "write_csv" "lmBootParallel" 
